{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\frontend\\\\src\\\\User.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null,\n      newUser: {\n        photo: \"\"\n      },\n      currentFile: undefined,\n      progress: 0,\n      message: \"\",\n      fileInfos: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append(\"photo\", this.state.newUser.photo);\n      const forData = new FormData(); // Update the formData object\n\n      forData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n      let currentFile = this.state.selectedFile[0];\n      this.setState({\n        progress: 0,\n        currentFile: currentFile\n      }); // Details of the uploaded file\n\n      console.log(':::::::::::::::::: SELECTED FILE', this.state.selectedFile);\n      this.setState({\n        progress: Math.round(100 * e.loaded / e.total)\n      });\n      axios.post(\"http://localhost:4000/users/add/\", formData).then(response => {\n        console.log(\"RESPONSE:\", response.data);\n        this.setState({\n          message: \"Success\"\n        });\n        this.setState({\n          fileInfos: this.state.fileInfos.push(this.state.selectedFile.name)\n        });\n        console.log(\"File:\", response.data);\n      }) // .then((res) => {\n      //   console.log('fdcgvhjgk',res);\n      //   this.setState({\n      //     message: res.data.message,\n      //   });\n      //   this.setState({\n      //     fileInfos: this.state.fileInfos.push(this.state.selectedFile.name),\n      //   });\n      // })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          progress: 0,\n          message: \"Could not upload the file!\",\n          currentFile: undefined\n        });\n      });\n      this.setState({\n        selectedFiles: undefined\n      });\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.handlePhoto = e => {\n      //  this.setState({...newUser,photo:e.target.files[0]});\n      //  setNewUser({...newUser, photo: e.target.files[0]});\n      const newState = { ...this.state.newUser,\n        photo: e.target.files[0]\n      };\n      this.setState({\n        newUser: newState\n      });\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.currentFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-info progress-bar-striped\",\n          role: \"progressbar\",\n          \"aria-valuenow\": this.state.progress,\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          style: {\n            width: this.state.progress + \"%\"\n          },\n          children: [this.state.progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"btn btn-default\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            name: \"photo\",\n            onChange: this.handlePhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-light\",\n          role: \"alert\",\n          children: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"List of Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group list-group-flush\",\n            children: this.state.fileInfos.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [console.log(' []][]][[][', file), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: file.url,\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/project/frontend/src/User.js"],"names":["React","Component","axios","User","state","selectedFile","newUser","photo","currentFile","undefined","progress","message","fileInfos","handleSubmit","e","preventDefault","formData","FormData","append","forData","name","setState","console","log","Math","round","loaded","total","post","then","response","data","push","catch","err","selectedFiles","fileData","type","lastModifiedDate","toDateString","handlePhoto","newState","target","files","render","width","map","file","index","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nexport default class User extends Component {\r\n  state = {\r\n    // Initially, no file is selected\r\n    selectedFile: null,\r\n    newUser: {\r\n      photo: \"\",\r\n    },\r\n    currentFile: undefined,\r\n    progress: 0,\r\n    message: \"\",\r\n\r\n    fileInfos: [],\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"photo\", this.state.newUser.photo);\r\n    const forData = new FormData();\r\n\r\n    // Update the formData object\r\n    forData.append(\r\n      \"myFile\",\r\n      this.state.selectedFile,\r\n      this.state.selectedFile.name\r\n    );\r\n    let currentFile = this.state.selectedFile[0];\r\n\r\n    this.setState({\r\n      progress: 0,\r\n      currentFile: currentFile,\r\n    });\r\n    // Details of the uploaded file\r\n    console.log(':::::::::::::::::: SELECTED FILE',this.state.selectedFile);\r\n\r\n    this.setState({\r\n      progress: Math.round((100 * e.loaded) / e.total),\r\n    });\r\n\r\n    axios\r\n      .post(\"http://localhost:4000/users/add/\", formData)\r\n      .then((response) => {\r\n        console.log(\"RESPONSE:\", response.data);\r\n        this.setState({\r\n              message:\"Success\",\r\n            });\r\n            this.setState({\r\n              fileInfos: this.state.fileInfos.push(this.state.selectedFile.name),\r\n            });\r\n            console.log(\"File:\", response.data);\r\n      })\r\n      // .then((res) => {\r\n      //   console.log('fdcgvhjgk',res);\r\n      //   this.setState({\r\n      //     message: res.data.message,\r\n      //   });\r\n      //   this.setState({\r\n      //     fileInfos: this.state.fileInfos.push(this.state.selectedFile.name),\r\n      //   });\r\n      // })\r\n     \r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          progress: 0,\r\n          message: \"Could not upload the file!\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  };\r\n\r\n  fileData = () => {\r\n    if (this.state.selectedFile) {\r\n      return (\r\n        <div>\r\n          <h2>File Details:</h2>\r\n\r\n          <p>File Name: {this.state.selectedFile.name}</p>\r\n\r\n          <p>File Type: {this.state.selectedFile.type}</p>\r\n\r\n          <p>\r\n            Last Modified:{\" \"}\r\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <br />\r\n          <h4>Choose before Pressing the Upload button</h4>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  handlePhoto = (e) => {\r\n    //  this.setState({...newUser,photo:e.target.files[0]});\r\n    //  setNewUser({...newUser, photo: e.target.files[0]});\r\n    const newState = { ...this.state.newUser, photo: e.target.files[0] };\r\n    this.setState({ newUser: newState });\r\n    this.setState({ selectedFile: e.target.files[0] });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.currentFile && (\r\n          <div className=\"progress\">\r\n            <div\r\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n              role=\"progressbar\"\r\n              aria-valuenow={this.state.progress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              style={{ width: this.state.progress + \"%\" }}\r\n            >\r\n              {this.state.progress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* INPUT FORM */}\r\n        <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\r\n          {/* CHOOSE FILE BTN */}\r\n          <label className=\"btn btn-default\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv\"\r\n              name=\"photo\"\r\n              onChange={this.handlePhoto}\r\n            />\r\n          </label>\r\n\r\n          {/* SUBMIT FILE UPLOAD */}\r\n          <input type=\"submit\" />\r\n          <div className=\"alert alert-light\" role=\"alert\">\r\n            {this.state.message}\r\n          </div>\r\n\r\n          {/* LIST OF FILES */}\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">List of Files</div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {this.state.fileInfos.map((file, index) => (\r\n                  <li className=\"list-group-item\" key={index}>\r\n                    {console.log(' []][]][[][', file)}\r\n                    <a href={file.url}>{file.name}</a>\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}